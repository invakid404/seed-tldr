name: Dendron

on:
  push:
    branches:
    - main
  # Run every hour
  schedule:
    - cron: "0 * * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Retrieve cached commit SHA for tldr
      id: tldr-cached
      run: |
        echo "::set-output name=SHA::$(git submodule status --cached | grep tldr | cut -d' ' -f1 | cut -c2-)"

    - name: Checkout & update submodules
      run: git submodule update --init --recursive --remote

    - name: Retrieve updated commit SHA for tldr
      id: tldr-updated
      run: |
        echo "::set-output name=SHA::$(cd repos/tldr && git rev-parse HEAD)"

    - name: Restore Node modules cache
      uses: actions/cache@v2
      id: node-modules-cache
      if: ${{ steps.tldr-cached.outputs.SHA != steps.tldr-updated.outputs.SHA }}
      with:
        path: |
          node_modules
        key: node-modules-${{ hashFiles('yarn.lock')}}

    - name: Install npm dependencies
      if: ${{ steps.tldr-cached.outputs.SHA != steps.tldr-updated.outputs.SHA }}
      run: yarn

    - name: Generate docs
      if: ${{ steps.tldr-cached.outputs.SHA != steps.tldr-updated.outputs.SHA }}
      run: yarn dendron-cli importPod --wsRoot . --podId dendron.markdown

    - name: Push changes
      uses: EndBug/add-and-commit@v7.0.0
      if: ${{ steps.tldr-cached.outputs.SHA != steps.tldr-updated.outputs.SHA }}
      with:
        message: "autoupdate docs"
        author_name: 'github-actions[bot]'
        author_email: 'github-actions[bot]@users.noreply.github.com'

    - name: Retrieve latest commit
      id: commit
      if: ${{ steps.tldr-cached.outputs.SHA != steps.tldr-updated.outputs.SHA }}
      run: |
        echo "::set-output name=SHA::$(git rev-parse HEAD)"

    - name: Build pod
      run: yarn dendron-cli buildSiteV2 --wsRoot .  --stage prod
      if: ${{ steps.tldr-cached.outputs.SHA != steps.tldr-updated.outputs.SHA }}

    - name: Deploy site
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ steps.tldr-cached.outputs.SHA != steps.tldr-updated.outputs.SHA }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: pages
        publish_dir: docs/
        full_commit_message: "deploy: ${{ steps.commit.outputs.SHA }}"
        force_orphan: true
        cname: "tldr.dendron.so"
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
